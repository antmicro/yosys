name: 'main'

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  build-binaries:
    runs-on: ubuntu-latest
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Build binaries
      run: |
        ./build_binaries.sh
        # By default actions/upload-artifact@v2 do not preserve file permissions
        # tar directory to workaround this issue
        # See https://github.com/actions/upload-artifact/issues/38
        tar -cvf binaries.tar image verilator/include

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: binaries.tar

  generate-matrix-yosys:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix-yosys.outputs.matrix }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 1

      - uses: actions/setup-python@v2
        with:
           python-version: '3.7'

      - name: Generate matrix (yosys)
        id: generate-matrix-yosys
        run: |
          matrix="$(cd uhdm-integration && python list.py -d tests -s ibex synthesis OneClass hello-uvm OneThis MultiplePrints assignment-pattern)"
          echo "::set-output name=matrix::$matrix"
          echo "matrix yosys: $matrix"

  generate-matrix-vcddiff:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix-vcddiff.outputs.matrix }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 1

      - uses: actions/setup-python@v2
        with:
           python-version: '3.7'

      - name: Generate matrix (vcddiff)
        id: generate-matrix-vcddiff
        run: |
          matrix="$(cd uhdm-integration && python list.py -d tests -s ibex synthesis OneClass hello-uvm OneThis array-copy assignment-pattern MultiplePrints)"
          echo "::set-output name=matrix::$matrix"
          echo "matrix vcddiff: $matrix"

  generate-ibex-modules:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-ibex-modules.outputs.matrix }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 1

      - uses: actions/setup-python@v2
        with:
           python-version: '3.7'

      - name: Generate matrix
        id: generate-ibex-modules
        run: |
          matrix="$(cd uhdm-integration && python list.py -d tests/ibex/module_tests)"
          echo "::set-output name=matrix::$matrix"
          echo "Matrix: $matrix"

  tests-yosys:
    runs-on: ubuntu-latest
    needs: [build-binaries, generate-matrix-yosys]
    strategy:
      matrix:
        TEST_CASE_YOSYS: ${{ fromJson(needs.generate-matrix-yosys.outputs.matrix) }}
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    # See https://github.com/actions/upload-artifact/issues/38
    - name: Extract
      run: tar -xf binaries.tar

    - name: Build & Test (yosys)
      run: ./uhdm-integration/.github/ci.sh
      env:
        TEST_CASE: ${{ matrix.TEST_CASE_YOSYS }}
        TARGET: uhdm/yosys/test-ast

  tests-vcddiff:
    runs-on: ubuntu-latest
    needs: [build-binaries, generate-matrix-vcddiff]
    strategy:
      matrix:
        TEST_CASE_VCDDIFF: ${{ fromJson(needs.generate-matrix-vcddiff.outputs.matrix) }}
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    # See https://github.com/actions/upload-artifact/issues/38
    - name: Extract
      run: tar -xf binaries.tar

    - name: Build & Test (vcddiff)
      run: ./uhdm-integration/.github/ci.sh
      env:
        TEST_CASE: ${{ matrix.TEST_CASE_VCDDIFF }}
        TARGET: uhdm/vcddiff

  ibex_synth:
    runs-on: ubuntu-latest
    needs: build-binaries
    strategy:
      matrix:
        TARGET: [uhdm/yosys/synth-ibex]
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    # See https://github.com/actions/upload-artifact/issues/38
    - name: Extract
      run: tar -xf binaries.tar

    - name: Build & Test
      run: |
        pip install virtualenv
        ./uhdm-integration/.github/ci.sh
      env:
        TARGET: uhdm/yosys/synth-ibex
        TEST_CASE: tests/ibex

    - uses: actions/upload-artifact@v2
      with:
        name: lowrisc_ibex_top_artya7_surelog_0.1.edif
        path: uhdm-integration/build/lowrisc_ibex_top_artya7_surelog_0.1/synth-yosys/lowrisc_ibex_top_artya7_surelog_0.1.edif
